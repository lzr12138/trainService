<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="rml.dao.PostMapper" >

  <select id="allPost" parameterType="java.util.Map" resultType="rml.model.Post">
	select * from post
	<where>
		<if test="trainid != null and trainid !='' ">
			trainid = #{trainid}
		</if>
		<if test="type != null and type !='' ">
			and type = #{type}
		</if>
	</where>
	order by clicknum desc limit #{start},#{end}
  </select>
  
  <select id="getCount" parameterType="java.util.Map" resultType="java.lang.Integer">
	select count(*) from post
	<where>
		<if test="trainid != null and trainid !='' ">
			trainid = #{trainid}
		</if>
		<if test="type != null and type !='' ">
			and type = #{type}
		</if>
	</where>
  </select>
  
  <select id="allPostforFirst" resultType="rml.model.Post">
	select * from post order by clicknum desc limit 5
  </select>
  
  <select id="selectPostByPostId" parameterType="java.lang.String" resultType="rml.model.Post">
	select * from post where id = #{postId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectCommentByPostId" parameterType="java.lang.String" resultType="rml.model.Comment">
	select * from comment where post_id = #{postId,jdbcType=VARCHAR}
  </select>
  
  <select id="selectReplyByCommentId" parameterType="java.lang.String" resultType="rml.model.Reply">
	select * from reply where comment_id = #{commentid,jdbcType=VARCHAR}
  </select>
  
  <select id="selectUserPost" parameterType="java.util.Map" resultType="rml.model.Post">
	select * from Post where publicUserId = #{publicUserId,jdbcType=VARCHAR}
		<if test="trainid != null and trainid !='' ">
			trainid = #{trainid}
		</if>
		<if test="type != null and type !='' ">
			and type = #{type}
		</if>
		order by clicknum desc limit #{start},#{end}
  </select>
  
  <select id="getCountuser" parameterType="java.util.Map" resultType="java.lang.Integer">
	select count(*) from post where publicUserId = #{publicUserId,jdbcType=VARCHAR}
		<if test="trainid != null and trainid !='' ">
			trainid = #{trainid}
		</if>
		<if test="type != null and type !='' ">
			and type = #{type}
		</if>
  </select>
  
  <insert id="insertPost" parameterType="rml.model.Post" >
    insert into post (id, title, type, date, content, publicUser, publicUserId, trainid, clicknum)
    values (#{id,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},  #{date,jdbcType=VARCHAR}, 
    #{content,jdbcType=VARCHAR},#{publicUser,jdbcType=VARCHAR},#{publicUserId,jdbcType=VARCHAR},#{trainid,jdbcType=VARCHAR},#{clicknum,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertComment" parameterType="rml.model.Comment" >
    insert into comment (id, post_id, comment_date, comment_user, content )
    values (#{id,jdbcType=VARCHAR}, #{post_id,jdbcType=VARCHAR}, #{comment_date,jdbcType=VARCHAR},  
    #{comment_user,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertReply" parameterType="rml.model.Reply" >
    insert into reply (id, comment_id, reply_username, be_reply_username, content )
    values (#{id,jdbcType=VARCHAR}, #{comment_id,jdbcType=VARCHAR}, #{reply_username,jdbcType=VARCHAR},  
    #{be_reply_username,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR})
  </insert>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from post
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteComment" parameterType="java.lang.String" >
    delete from comment
    where post_id = #{postid,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteReply" parameterType="java.lang.String" >
    delete from reply
    where comment_id = #{commentid,jdbcType=VARCHAR}
  </delete>
  
  <update id="addClickNum" parameterType="rml.model.Post" >
    update post
    set clicknum = #{clicknum,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
</mapper>